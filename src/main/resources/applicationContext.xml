<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:mvc="http://www.springframework.org/schema/mvc"

        xsi:schemaLocation="

	  http://www.springframework.org/schema/beans
	  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd

	  http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd

	  http://www.springframework.org/schema/aop
	  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd

	  http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd

      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd

      ">

    <!-- 配置C3P0连接池(即管理数据库连接) -->
    <bean id="comboPooledDataSourceID" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/ssmdemo"/>
        <property name="user" value="root"/>
        <property name="password" value=""/>
    </bean>


    <!-- 配置SqlSessionFactoryBean(即替代MyBatisUtil工具类的作用) -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="comboPooledDataSourceID"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>

    </bean>



    <!-- 配置事务管理器(即使用JDBC事务管理器) -->
    <bean id="dataSourceTransactionManagerID" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="comboPooledDataSourceID"/>
    </bean>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 配置事务通知(即哪些方法需要事务) -->
    <tx:advice id="tx" transaction-manager="dataSourceTransactionManagerID">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>


    <!-- 配置事务切面(即哪些包中的类需要事务通知) -->
    <aop:config>
        <aop:pointcut id="cqvie" expression="execution(* service.impl..*.*(..))"/>
        <aop:advisor advice-ref="tx" pointcut-ref="cqvie"/>
    </aop:config>
    <!-- 配置StudentDao类 -->
    <bean id="studentDaoID" class="dao.impl.EmpDaoImpl">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
    <!--
	MapperScannerConfigurer：mapper的扫描器，将包下边的mapper接口自动创建代理对象，
	自动创建到spring容器中，bean的id是mapper的类名（首字母小写）
	 -->
    <!-- 配置扫描包的路径
    如果要扫描多个包，中间使用半角逗号分隔
    要求mapper.xml和mapper.java同名且在同一个目录
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="mapper.**"/>
    </bean>


    <!--实体bean的配置-->
    <!-- 管理员-->
    <bean id="adminservice" class="service.impl.AdminServiceImpl"/>
    <bean id="adminExample" class="mapper.AdminExample"/>

    <!-- 用户 -->
    <bean id="userservice" class="service.impl.UserServiceImpl"/>
    <bean id="userExample" class="mapper.UserExample"/>


    <bean id="emp" class="dao.impl.EmpDaoImpl">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>

</beans>
